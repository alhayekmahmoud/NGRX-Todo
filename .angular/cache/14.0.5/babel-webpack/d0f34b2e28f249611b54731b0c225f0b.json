{"ast":null,"code":"import { select } from \"@ngrx/store\";\nimport { todoActions } from \"../actions\";\nimport { getIsloading, getApiError, todoEntities } from \"../reducers\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common\";\n\nfunction TodoComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \" please wait loading.... \");\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction TodoComponent_ng_container_4_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r6.title);\n  }\n}\n\nfunction TodoComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TodoComponent_ng_container_4_p_1_Template, 2, 1, \"p\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const entities_r4 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", entities_r4);\n  }\n}\n\nfunction TodoComponent_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \" An error occured\\n\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nexport class TodoComponent {\n  constructor(store) {\n    this.store = store;\n    this.store.dispatch(todoActions.fetchToDoStart());\n    this.entities$ = this.store.pipe(select(todoEntities));\n    this.isloading$ = this.store.pipe(select(getIsloading));\n    this.apiError$ = this.store.pipe(select(getApiError));\n  }\n\n}\n\nTodoComponent.ɵfac = function TodoComponent_Factory(t) {\n  return new (t || TodoComponent)(i0.ɵɵdirectiveInject(i1.Store));\n};\n\nTodoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TodoComponent,\n  selectors: [[\"todo-page\"]],\n  decls: 8,\n  vars: 9,\n  consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function TodoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"TODOS\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, TodoComponent_ng_container_2_Template, 2, 0, \"ng-container\", 0);\n      i0.ɵɵpipe(3, \"async\");\n      i0.ɵɵtemplate(4, TodoComponent_ng_container_4_Template, 2, 1, \"ng-container\", 0);\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵtemplate(6, TodoComponent_ng_container_6_Template, 2, 0, \"ng-container\", 0);\n      i0.ɵɵpipe(7, \"async\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(3, 3, ctx.isloading$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(5, 5, ctx.entities$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(7, 7, ctx.apiError$));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i2.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAEA,SAASA,MAAT,QAAsB,aAAtB;AAKA,SAASC,WAAT,QAA4B,YAA5B;AAEA,SAASC,YAAT,EAAuBC,WAAvB,EAAmCC,YAAnC,QAAkE,aAAlE;;;;;;;ICRAC;IACIA;IAEJA;;;;;;IAGIA;IAAiCA;IAAcA;;;;;IAAdA;IAAAA;;;;;;IADrCA;IACIA;IAEJA;;;;;IAFwBA;IAAAA;;;;;;IAIxBA;IACIA;IACJA;;;;ADGA,OAAM,MAAOC,aAAP,CAAoB;EAKtBC,YAAoBC,KAApB,EAA0C;IAAtB;IAChB,KAAKA,KAAL,CAAWC,QAAX,CAAoBR,WAAW,CAACS,cAAZ,EAApB;IACA,KAAKC,SAAL,GAAiB,KAAKH,KAAL,CAAWI,IAAX,CAAgBZ,MAAM,CAACI,YAAD,CAAtB,CAAjB;IACA,KAAKS,UAAL,GAAkB,KAAKL,KAAL,CAAWI,IAAX,CAAgBZ,MAAM,CAACE,YAAD,CAAtB,CAAlB;IACA,KAAKY,SAAL,GAAgB,KAAKN,KAAL,CAAWI,IAAX,CAAgBZ,MAAM,CAACG,WAAD,CAAtB,CAAhB;EACH;;AAVqB;;;mBAAbG,eAAaD;AAAA;;;QAAbC;EAAaS;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MChB1Bd;MAAIA;MAAKA;MACTA;;MAKAA;;MAKAA;;;;;MAVeA;MAAAA;MAKAA;MAAAA;MAKAA;MAAAA","names":["select","todoActions","getIsloading","getApiError","todoEntities","i0","TodoComponent","constructor","store","dispatch","fetchToDoStart","entities$","pipe","isloading$","apiError$","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\MahmoudA\\NGrepo\\NGRX\\NGRX-Todo\\src\\app\\todo\\components\\todo.component.ts","C:\\Users\\MahmoudA\\NGrepo\\NGRX\\NGRX-Todo\\src\\app\\todo\\templates\\todo.template.html"],"sourcesContent":["import { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Component } from \"@angular/core\";\r\nimport { select} from \"@ngrx/store\";\r\nimport { Store} from \"@ngrx/store\";\r\n\r\n\r\nimport { Observable } from \"rxjs\";\r\nimport { todoActions } from \"../actions\";\r\nimport { ITodo } from \"../models/todo\";\r\nimport { getIsloading, getApiError,todoEntities, TodoState } from \"../reducers\";\r\nimport { isloading } from \"../reducers/api.reducer\";\r\n\r\n@Component({\r\n    selector:'todo-page',\r\n    templateUrl:'../templates/todo.template.html',\r\n})\r\nexport class TodoComponent{\r\n    entities$:Observable<ITodo[]>;\r\n    isloading$:Observable<boolean | undefined>;\r\n    apiError$:Observable<HttpErrorResponse | undefined>;\r\n\r\n    constructor(private store:Store<TodoState>){\r\n        this.store.dispatch(todoActions.fetchToDoStart());\r\n        this.entities$ = this.store.pipe(select(todoEntities));\r\n        this.isloading$ = this.store.pipe(select(getIsloading));\r\n        this.apiError$= this.store.pipe(select(getApiError))\r\n    }\r\n\r\n}","<h1>TODOS</h1>\r\n<ng-container *ngIf=\"isloading$|async as loading\">\r\n    please wait loading....\r\n\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"entities$|async as entities\">\r\n    <p *ngFor=\"let item of entities\">{{item.title}}</p>\r\n\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"apiError$|async as error\">\r\n    An error occured\r\n</ng-container>"]},"metadata":{},"sourceType":"module"}